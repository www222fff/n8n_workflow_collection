{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1184,
        -96
      ],
      "id": "67572171-9ba2-4df8-8b87-b0ffe5deacd8",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://53edba271760e4b58e08299442fca98930daa137-4000.dstack-prod8.phala.network/api/latest-utxo",
        "options": {
          "splitIntoItems": true
        }
      },
      "id": "e3f725ee-cb9a-4967-a2d7-1f3a13d44d8d",
      "name": "Get latest utxo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -784,
        32
      ]
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -560,
        32
      ],
      "id": "6caf03f5-162d-460f-8c6e-07c48c1aafb4",
      "name": "Limit UTXO"
    },
    {
      "parameters": {
        "functionCode": "const inputArray = items[0].json.result;\nlet blockHeightLine = \"\";\nconst bhItem = inputArray.find(obj => obj.blockHeight);\nif (bhItem) {\n  blockHeightLine = `Big 5 UTXO on blockHeight: ${bhItem.blockHeight}`;\n}\nconst addrItems = inputArray.filter(obj => !obj.blockHeight);\nconst texts = addrItems.slice(5, 10).map(obj => {\n  const key = Object.keys(obj)[0];\n  let address = key.includes(\"_\") ? key.split(\"_\")[1] : key;\n  const utxoRaw = obj[key];\n  let utxo = Math.floor(parseFloat(utxoRaw) || 0);\n  return `${address}: ${utxo}`;\n});\nfooter = `#BTC #Crypto`;\nlet tweet = [blockHeightLine, ...texts, footer].join(\"\\n\");\nif (tweet.length > 280) {\n  tweet = tweet.slice(0, 277) + \"...\";\n}\nreturn [{ json: { text: tweet } }];"
      },
      "id": "beedf800-64f9-43e4-8b53-daeccae30f4d",
      "name": "Format Latest UTXO",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -352,
        32
      ]
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -560,
        -176
      ],
      "id": "99a319e8-d442-45fe-82e2-f557969bcc66",
      "name": "Limit Top"
    },
    {
      "parameters": {
        "functionCode": "const inputArray = items[0].json.result;\nheader = `Top 5 rank:`;\nfooter = `#BTC`;\nconst addrItems = inputArray.filter(obj => !obj.blockHeight);\nconst texts = addrItems.slice(0, 5).map(obj => {\n  const key = Object.keys(obj)[0];\n  let address = key.includes(\"_\") ? key.split(\"_\")[1] : key;\n  const utxoRaw = obj[key];\n  let utxo = Math.floor(parseFloat(utxoRaw) || 0);\n  return `${address}: ${utxo}`;\n});\nlet tweet = [header, ...texts, footer].join(\"\\n\");\nif (tweet.length > 280) {\n  tweet = tweet.slice(0, 277) + \"...\";\n}\nreturn [{ json: { text: tweet } }];"
      },
      "id": "c90e2199-0298-4ff8-be8b-80808bd960fd",
      "name": "Format Top Rank",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -384,
        -176
      ]
    },
    {
      "parameters": {
        "url": "https://53edba271760e4b58e08299442fca98930daa137-4000.dstack-prod8.phala.network/api/top-balances",
        "options": {
          "splitIntoItems": true
        }
      },
      "id": "4756d231-7f78-4caf-b5d7-10c8d96fc1fc",
      "name": "Get top balance",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -784,
        -176
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        48,
        -16
      ],
      "id": "81cb277c-228c-4351-9027-5b939d66a98c",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      text: $items[1].json.text,           // 第二条 text (Latest UTXO)\n      replyToId: $items[0].json.id         // 第一条 tweet id (Top Rank)\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        -16
      ],
      "id": "b281a544-c506-472a-947f-3edcc1bfb43d",
      "name": "Code"
    },
    {
      "parameters": {
        "text": "={{$json[\"text\"]}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        -192,
        -176
      ],
      "id": "cfa26df0-1b1c-409c-9001-5b47c74c0c8b",
      "name": "Create Tweet",
      "credentials": {
        "twitterOAuth2Api": {
          "id": "QdAkpuhCZiVLrFmj",
          "name": "X account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "additionalFields": {
          "inReplyToStatusId": {
            "__rl": true,
            "value": "={{ $json.replyToId }}",
            "mode": "id"
          }
        }
      },
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        368,
        -16
      ],
      "id": "1aeb5ceb-1d04-43d8-a617-ef323b33356b",
      "name": "Reply Tweet",
      "credentials": {
        "twitterOAuth2Api": {
          "id": "QdAkpuhCZiVLrFmj",
          "name": "X account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get top balance",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get latest utxo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get top balance": {
      "main": [
        [
          {
            "node": "Limit Top",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit Top": {
      "main": [
        [
          {
            "node": "Format Top Rank",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get latest utxo": {
      "main": [
        [
          {
            "node": "Limit UTXO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit UTXO": {
      "main": [
        [
          {
            "node": "Format Latest UTXO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Latest UTXO": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Format Top Rank": {
      "main": [
        [
          {
            "node": "Create Tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Reply Tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Tweet": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reply Tweet": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a8cd9435-e393-467d-b47f-318feeb39e4e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d6be6db053bc793431c40352dfe5f969f52f0df6fd00f52106a034f61307cef3"
  },
  "id": "FlxCMi76DboyNDRE",
  "tags": []
}
