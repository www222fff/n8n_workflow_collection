{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -576,
        -32
      ],
      "id": "630a9ce9-8e52-4e85-838d-b7db9ed17649",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "https://53edba271760e4b58e08299442fca98930daa137-4000.dstack-prod8.phala.network/api/latest-utxo",
        "options": {
          "splitIntoItems": true
        }
      },
      "id": "fa8df815-bd99-409a-84c6-4a6eb099c7c7",
      "name": "Get latest utxo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -352,
        -32
      ]
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -128,
        -32
      ],
      "id": "137ee207-9b84-4351-a7e8-8d4523c92251",
      "name": "Limit"
    },
    {
      "parameters": {
        "text": "={{$json[\"text\"]}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        304,
        -32
      ],
      "id": "8cfe439a-7264-4093-a42b-aca4ffec5812",
      "name": "Create Tweet",
      "credentials": {
        "twitterOAuth2Api": {
          "id": "QdAkpuhCZiVLrFmj",
          "name": "X account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// 输入只有一个 item，数据在 items[0].json.result\nconst inputArray = items[0].json.result;\n\n// 1. 先找到 blockHeight\nlet blockHeightLine = \"\";\nconst bhItem = inputArray.find(obj => obj.blockHeight);\nif (bhItem) {\n  blockHeightLine = `Big 5 UTXO on blockHeight: ${bhItem.blockHeight}`;\n}\n\n// 2. 剩下的地址数据\nconst addrItems = inputArray.filter(obj => !obj.blockHeight);\n\n// 3. 取前 10 条，格式化\nconst texts = addrItems.slice(0, 5).map(obj => {\n  const key = Object.keys(obj)[0];   // 例如 \"ffffff..._1ABC...\"\n  let address = key.includes(\"_\") ? key.split(\"_\")[1] : key;\n\n  const utxoRaw = obj[key];\n  let utxo = Math.floor(parseFloat(utxoRaw) || 0);\n\n  return `${address}: ${utxo}`;\n});\n\nfooter = `#BTC #Crypto`;\n\n// 4. 拼接推文，blockHeight 在最上面\nlet tweet = [blockHeightLine, ...texts, footer].join(\"\\n\");\n\n// 5. 限制 280 字符\nif (tweet.length > 280) {\n  tweet = tweet.slice(0, 277) + \"...\";\n}\n\n// 6. 输出给 Twitter Node\nreturn [\n  {\n    json: {\n      text: tweet\n    }\n  }\n];\n"
      },
      "id": "f08a4074-9c8f-4442-8b32-629400e36d3e",
      "name": "Combine 5 Items",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        80,
        -32
      ]
    },
    {
      "parameters": {
        "maxItems": 10
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -128,
        176
      ],
      "id": "9092e73e-35a5-4376-b7f1-02c711adc6b8",
      "name": "Limit1"
    },
    {
      "parameters": {
        "text": "={{$json[\"text\"]}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 2,
      "position": [
        304,
        176
      ],
      "id": "f12e37e5-5449-424f-a1d2-a91113957cb5",
      "name": "Create Tweet1",
      "credentials": {
        "twitterOAuth2Api": {
          "id": "QdAkpuhCZiVLrFmj",
          "name": "X account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// 输入只有一个 item，数据在 items[0].json.result\nconst inputArray = items[0].json.result;\n\n// 1. 先找到 blockHeight\n\nheader = `Top 5 rank:`;\nfooter = `#BTC`;\n\n// 2. 剩下的地址数据\nconst addrItems = inputArray.filter(obj => !obj.blockHeight);\n\n// 3. 取前 10 条，格式化\nconst texts = addrItems.slice(0, 5).map(obj => {\n  const key = Object.keys(obj)[0];   // 例如 \"ffffff..._1ABC...\"\n  let address = key.includes(\"_\") ? key.split(\"_\")[1] : key;\n\n  const utxoRaw = obj[key];\n  let utxo = Math.floor(parseFloat(utxoRaw) || 0);\n\n  return `${address}: ${utxo}`;\n});\n\n// 4. 拼接推文，blockHeight 在最上面\nlet tweet = [header, ...texts, footer].join(\"\\n\");\n\n// 5. 限制 280 字符\nif (tweet.length > 280) {\n  tweet = tweet.slice(0, 277) + \"...\";\n}\n\n// 6. 输出给 Twitter Node\nreturn [\n  {\n    json: {\n      text: tweet\n    }\n  }\n];\n"
      },
      "id": "462b0f67-f175-4eb7-89eb-b515bbeba343",
      "name": "Combine 5 Items1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        80,
        176
      ]
    },
    {
      "parameters": {
        "url": "https://53edba271760e4b58e08299442fca98930daa137-4000.dstack-prod8.phala.network/api/top-balances",
        "options": {
          "splitIntoItems": true
        }
      },
      "id": "f81d42a3-e550-423e-b33e-b19c2381952c",
      "name": "Get top balance",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -352,
        176
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Get latest utxo": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Combine 5 Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get latest utxo",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get top balance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine 5 Items": {
      "main": [
        [
          {
            "node": "Create Tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit1": {
      "main": [
        [
          {
            "node": "Combine 5 Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine 5 Items1": {
      "main": [
        [
          {
            "node": "Create Tweet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get top balance": {
      "main": [
        [
          {
            "node": "Limit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c63b2ba0-7532-44fa-ba64-f80338f38e1e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d6be6db053bc793431c40352dfe5f969f52f0df6fd00f52106a034f61307cef3"
  },
  "id": "FlxCMi76DboyNDRE",
  "tags": []
}
